{
  
    
        "post0": {
            "title": "Blogging with Fastpages",
            "content": "I may be a hypocrite, but I’m not wrong… . Example Markdown Post . . I’ve spent over 25 years preaching the value of a portfolio site to artists, software engineers, and designers that wanted to join my studio or learn how to get into games or related industries. Now that I’m 6 months into my PhD and planning for career 2.0, it’s past time for me to do the same. This sums up the justification in a single tweet: . The popularity of this tweet makes me laugh, because it&#39;s an illustrative example! I thought about trying to get a screenshot of David&#39;s slide, but just took a terrible phone photo of a webinar and tweeted with the quote. . &mdash; Amelia McNamara (@AmeliaMN) July 22, 2018 I recently finished reading Build a Career in Data Science1, which I recommend. It motivated me to start the process of sharing my work. . Introduction to Fastpages . This site is built with fastpages, a platform for building static Jekyll web blogs from Jupyter Notebooks (JNs). Markdown and Word DOCs are also supported. . . From their github page: . fastpages automates the process of creating blog posts via GitHub Actions, so you don’t have to fuss with conversion scripts. A full list of features can be found on GitHub. . Fastpages is built by the team that created the deep learning PyTorch front-end fastai and the Python programming environment nbdev. The team is led by Jeremy Howard, former President and Chief Data Scientist of Kaggle and author of Deep Learning for Coders with Fastai and PyTorch: AI Applications Without a PhD2. . I was first introduced fastpages and nbdev during the recent ACM TechTalk, It’s Time Deep Learning Learned from Software Engineering, presented by Howard and moderated by his collaborator Hamel Husain. . From Introducing Fastpages: . fastpages uses nbdev to power the conversion process of Jupyter Notebooks to blog posts. When you save a notebook into the /_notebooks folder of your repository, GitHub Actions applies nbdev against those notebooks automatically. The same process occurs when you save Word documents or markdown files into the _word or _posts directory, respectively. . Some resources I found helpful in launching this blog: . The fastpages github page has detailed setup instructions | This video tutorial created by Abdul Majed walks you through the initial setup process | A sample jupyter-based blog page provides a live demonstration of its capabilities | . I was able to get the initial site live quite quickly with little drama, and have found the process of modifying existing content and publishing new material straightforward so far. Before choosing fastpages I considered the following hosting / authoring options: . A general purpose site like Wix | A page on Medium or Substack | Other JN-based tools like Pelican | Finding a way to use JNs in blogdown3 | . I decided that Fastpages was the best way for me to publish JN-based work directly, with professional look and feel, on a site that I control, for free. That’s a pretty great combination. I also like that it supports Markdown (like this page), is part of the larger fast.ai family of products (and philosophy), and is hosted on github. . Finally, if you still need to be convinced of the value of building a portfolio, and what to include in one give the following resources a look: . Advice to aspiring data scientists: start a blog on David Robinson’s Variance Explained | Data Science Portfolios That Will Get You the Job | Thinking of blogging about Data Science? Here are some tips and possible benefits. | . Many of us need to spend less time consuming, and more time creating. Now you know how and why, so go publish something! . . Robinson, Emily, and Jacqueline Nolis. Build a Career in Data Science. Simon and Schuster, 2020. &#8617; . | Howard, Jeremy, and Sylvain Gugger. Deep Learning for Coders with Fastai and PyTorch. O’Reilly Media, Inc., 2020. &#8617; . | There is a lot of cool stuff going on in R these days and blogdown supports a lot of interesting publishing workflows, but I ultimately decided that it would probably be easier to find a way to publish my R work using fastpages than to publish my Python work with blogdown. Time will tell… &#8617; . |",
            "url": "https://christopherguan.github.io/sample-ds-blog/publication/jupyter/2022/03/07/test-markdown-post.html",
            "relUrl": "/publication/jupyter/2022/03/07/test-markdown-post.html",
            "date": " • Mar 7, 2022"
        }
        
    
  
    
  
    
  
    
        ,"post3": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://christopherguan.github.io/sample-ds-blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "Resume",
            "content": "­­EDUCATION . Fei Tian College Middletown, Middletown, NY . Bachelor of Science, Data Science Expected June 2023 . No.2 Experimental High School, Changchun, Jilin . Graduated May 2015 . Courses . Data Mining, Cloud Computing and Big data, Business Data Analytics, Statistical Computing and Graphics, Database Systems, Data structure and Algorithm, Computation Analysis and Practical Programing, Linear Algebra, Probability, Statistics . EXPERIENCE . Youtube Data Automation December 2021 – January 2022 . Paid Project . Obtained authorization credentials and stored hidden Youtube data in a csv file. . Cleaned and stored data to MySQL database by using python. . Developed an application that execute all previous actions and displayed monthly report on google sheet periodically and automatically. . CRM System May 2021– September 2021 . Summer Internship . Narrowed CRM applications that fit the financial department’s expectation. . Implemented and applied requirements from financial department to four popular applications. . Created multiple video tutorials to help the future employees to understand the application better. . Data Mining January 2021 – May 2021 . Multiple Projects . Outlined and understood the overall view of data mining through learning and proficient use of RapidMiner Studio. . Master on Pandas and Numpy python packages. . Developed movie recommendation system based on both content-based and collaborative filtering. . Business Data Analytics May 2020 – August 2020 . NYC Arrest Record . Imported, cleaned, and transformed data involving NYC arrest record by using Microsoft Excel and Tableau. . | Designed, created and developed interactive dynamic dashboard for NYC arrest record by using Tableau to better visualize, diagnose, and predict abnormal fluctuations in the number of arrests and countermeasures. . | Exhibited, informed, and interpreted valuable informative outputs of the exploratory data analysis and the prediction of the safest area to live, the change in number of the arrest, and the life characteristics of different races. . | . Database System January 2020 – May 2020 . Website and SQL Queries . Used Python flask and HTML, ran on AWS EC2, made a friendly front-end UI. . Wrote several SQL Queries to extract informative results to satisfy passengers’ understanding of flights and airports. . Statistical Computing and Graphics . World Happiness Analysis September 2020 – December 2020 . Performed data manipulation and data cleaning. . | Analyzed and normalized the data, and displayed graphs based on the analysis using RStudio, with the tidyverse and ggplot2 packages. . | Demoed and explained the disclosures including the outliers and the irregular fluctuations in the happiness ranking. . | Analyzed and predicted the causation. . | . SKILLS . Computer/ Tools: Tableau, AWS, Python, R, MySQL Workbench, RapidMiner, Advanced knowledge of Excel, Intermediate level of Java, HTML, CSS. . Analytical skills, qualitative and quantitative research skills. . Public Speaking; Public Relations; Event Planning, Storyteller, Teamwork; Detail-oriented; Social skills; Project management . CERTIFICATIONS . Data Analysis in Spreadsheets . Intermediate R for Finance . Credit Risk Modeling in R .",
            "url": "https://christopherguan.github.io/sample-ds-blog/2020/02/09/Resume.html",
            "relUrl": "/2020/02/09/Resume.html",
            "date": " • Feb 9, 2020"
        }
        
    
  
    
        ,"post5": {
            "title": "Abou Me",
            "content": "­­EDUCATION . Fei Tian College Middletown, Middletown, NY . Bachelor of Science, Data Science Expected June 2023 . No.2 Experimental High School, Changchun, Jilin . Graduated May 2015 . Courses . Data Mining, Cloud Computing and Big data, Business Data Analytics, Statistical Computing and Graphics, Database Systems, Data structure and Algorithm, Computation Analysis and Practical Programing, Linear Algebra, Probability, Statistics . EXPERIENCE . Youtube Data Automation December 2021 – January 2022 . Paid Project . Obtained authorization credentials and stored hidden Youtube data in a csv file. . Cleaned and stored data to MySQL database by using python. . Developed an application that execute all previous actions and displayed monthly report on google sheet periodically and automatically. . CRM System May 2021– September 2021 . Summer Internship . Narrowed CRM applications that fit the financial department’s expectation. . Implemented and applied requirements from financial department to four popular applications. . Created multiple video tutorials to help the future employees to understand the application better. . Data Mining January 2021 – May 2021 . Multiple Projects . Outlined and understood the overall view of data mining through learning and proficient use of RapidMiner Studio. . Master on Pandas and Numpy python packages. . Developed movie recommendation system based on both content-based and collaborative filtering. . Business Data Analytics May 2020 – August 2020 . NYC Arrest Record . Imported, cleaned, and transformed data involving NYC arrest record by using Microsoft Excel and Tableau. . | Designed, created and developed interactive dynamic dashboard for NYC arrest record by using Tableau to better visualize, diagnose, and predict abnormal fluctuations in the number of arrests and countermeasures. . | Exhibited, informed, and interpreted valuable informative outputs of the exploratory data analysis and the prediction of the safest area to live, the change in number of the arrest, and the life characteristics of different races. . | . Database System January 2020 – May 2020 . Website and SQL Queries . Used Python flask and HTML, ran on AWS EC2, made a friendly front-end UI. . Wrote several SQL Queries to extract informative results to satisfy passengers’ understanding of flights and airports. . Statistical Computing and Graphics . World Happiness Analysis September 2020 – December 2020 . Performed data manipulation and data cleaning. . | Analyzed and normalized the data, and displayed graphs based on the analysis using RStudio, with the tidyverse and ggplot2 packages. . | Demoed and explained the disclosures including the outliers and the irregular fluctuations in the happiness ranking. . | Analyzed and predicted the causation. . | . SKILLS . Computer/ Tools: Tableau, AWS, Python, R, MySQL Workbench, RapidMiner, Advanced knowledge of Excel, Intermediate level of Java, HTML, CSS. . Analytical skills, qualitative and quantitative research skills. . Public Speaking; Public Relations; Event Planning, Storyteller, Teamwork; Detail-oriented; Social skills; Project management . CERTIFICATIONS . Data Analysis in Spreadsheets . Intermediate R for Finance . Credit Risk Modeling in R .",
            "url": "https://christopherguan.github.io/sample-ds-blog/2020/01/28/Abou-Me.html",
            "relUrl": "/2020/01/28/Abou-Me.html",
            "date": " • Jan 28, 2020"
        }
        
    
  
    
        ,"post6": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://christopherguan.github.io/sample-ds-blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Chris",
          "content": ". Courses . Data Mining, Cloud Computing and Big data, Business Data Analytics, Statistical Computing and Graphics, Database Systems, Data structure and Algorithm, Computation Analysis and Practical Programing, Linear Algebra, Probability, Statistics . Experience . Youtube Data Automation                                                              December 2021 – January 2022 Paid Project . Obtained authorization credentials and stored hidden Youtube data in a csv file. | Cleaned and stored data to MySQL database by using python. | Developed an application that execute all previous actions and displayed monthly report on google sheet periodically and automatically. | . . CRM System                                                                                         May 2021– September 2021 Summer Internship . Narrowed CRM applications that fit the financial department’s expectation. | Implemented and applied requirements from financial department to four popular applications. | Created multiple video tutorials to help the future employees to understand the application better. | . . Data Mining                                                                                               January 2021 – May 2021 Multiple Projects . Outlined and understood the overall view of data mining through learning and proficient use of RapidMiner Studio. | Master on Pandas and Numpy python packages. | Developed movie recommendation system based on both content-based and collaborative filtering. | . . Business Data Analytics                                                                           May 2020 – August 2020 NYC Arrest Record . Imported, cleaned, and transformed data involving NYC arrest record by using Microsoft Excel and Tableau. | Designed, created and developed interactive dynamic dashboard for NYC arrest record by using Tableau to better visualize, diagnose, and predict abnormal fluctuations in the number of arrests and countermeasures. | Exhibited, informed, and interpreted valuable informative outputs of the exploratory data analysis and the prediction of the safest area to live, the change in number of the arrest, and the life characteristics of different races. | . . Database System                                                                                      January 2020 – May 2020 Website and SQL Queries . Used Python flask and HTML, ran on AWS EC2, made a friendly front-end UI. | Wrote several SQL Queries to extract informative results to satisfy passengers’ understanding of flights and airports. | . . Statistical Computing and Graphics                                        September 2020 – December 2020 World Happiness Analysis . Performed data manipulation and data cleaning. | Analyzed and normalized the data, and displayed graphs based on the analysis using RStudio, with the tidyverse and ggplot2 packages. | Demoed and explained the disclosures including the outliers and the irregular fluctuations in the happiness ranking. | Analyzed and predicted the causation. | . . Skills . Computer Tools: Tableau, AWS, Python, R, MySQL Workbench, RapidMiner, Advanced knowledge of Excel, Intermediate level of Java, HTML, CSS. Analytical skills, qualitative and quantitative research skills. Public Speaking; Public Relations; Event Planning, Storyteller, Teamwork; Detail-oriented; Social skills; Project management . . Certifications . Data Analysis in Spreadsheets | Intermediate R for Finance | Credit Risk Modeling in R | . . Favorite Quote . “Great beauty, great strength, and great riches are really and truly of no great use; a right heart exceeds all” ― Benjamin Franklin .",
          "url": "https://christopherguan.github.io/sample-ds-blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://christopherguan.github.io/sample-ds-blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}